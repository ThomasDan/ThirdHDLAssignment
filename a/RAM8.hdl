// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    
    DMux8Way(in=load, sel=address, a=aSel, b=bSel, c=cSel, d=dSel, e=eSel, f=fSel, g=gSel, h=hSel);
    
    Register(in=in, load=aSel, out=outA); // a register
    Register(in=in, load=bSel, out=outB); // b register
    Register(in=in, load=cSel, out=outC); // c register
    Register(in=in, load=dSel, out=outD); // d register
    Register(in=in, load=eSel, out=outE); // e register
    Register(in=in, load=fSel, out=outF); // f register
    Register(in=in, load=gSel, out=outG); // g register
    Register(in=in, load=hSel, out=outH); // h register

    Mux8Way16(a=outA, b=outB, c=outC, d=outD, e=outE, f=outF, g=outG, h=outH, sel=address, out=out);
}